(()=>{var e={176:e=>{e.exports={development:{username:"samanthalee",password:null,database:"dsp_react_development",host:"127.0.0.1",dialect:"postgres"},production:{use_env_variable:"DATABASE_URL",dialect:"postgres",protocol:"postgres",dialectOptions:{ssl:{require:!0,rejectUnauthorized:!1}}}}}},t={};function l(r){var s=t[r];if(void 0!==s)return s.exports;var o=t[r]={exports:{}};return e[r](o,o.exports,l),o.exports}(()=>{"use strict";const e=require("cookie-parser"),t=require("express"),r=require("method-override"),s=require("cors"),o=require("path"),a=require("sequelize"),i=l(176).production,n={},d=new a.Sequelize(i.database,i.username,i.password,i);n.User=function(e,t){return e.define("user",{id:{allowNull:!1,autoIncrement:!0,primaryKey:!0,type:t.INTEGER},name:{type:t.STRING},email:{type:t.STRING},password:{type:t.STRING},createdAt:{allowNull:!1,type:t.DATE},updatedAt:{allowNull:!1,type:t.DATE}},{underscored:!0})}(d,a.Sequelize.DataTypes),n.Section=function(e,t){return e.define("section",{id:{allowNull:!1,autoIncrement:!0,primaryKey:!0,type:t.INTEGER},sectionName:{type:t.STRING},createdAt:{allowNull:!1,type:t.DATE},updatedAt:{allowNull:!1,type:t.DATE}},{underscored:!0})}(d,a.Sequelize.DataTypes),n.Category=function(e,t){return e.define("category",{id:{allowNull:!1,autoIncrement:!0,primaryKey:!0,type:t.INTEGER},categoryName:{type:t.STRING},categoryImg:{type:t.STRING},sectionId:{type:t.INTEGER,references:{model:"sections",key:"id"}},createdAt:{allowNull:!1,type:t.DATE},updatedAt:{allowNull:!1,type:t.DATE}},{underscored:!0})}(d,a.Sequelize.DataTypes),n.Skill=function(e,t){return e.define("skill",{id:{allowNull:!1,autoIncrement:!0,primaryKey:!0,type:t.INTEGER},skillName:{type:t.STRING},skillImg:{type:t.STRING},categoryId:{type:t.INTEGER,references:{model:"categories",key:"id"}},createdAt:{allowNull:!1,type:t.DATE},updatedAt:{allowNull:!1,type:t.DATE}},{underscored:!0})}(d,a.Sequelize.DataTypes),n.Resource=function(e,t){return e.define("resource",{id:{allowNull:!1,autoIncrement:!0,primaryKey:!0,type:t.INTEGER},resourceName:{type:t.STRING},resourceLink:{type:t.STRING},skillId:{type:t.INTEGER,references:{model:"skills",key:"id"}},favicon:{type:t.STRING},isDefault:{type:t.BOOLEAN},createdAt:{allowNull:!1,type:t.DATE},updatedAt:{allowNull:!1,type:t.DATE}},{underscored:!0})}(d,a.Sequelize.DataTypes),n.UserSkill=function(e,t){return e.define("user_skill",{id:{allowNull:!1,autoIncrement:!0,primaryKey:!0,type:t.INTEGER},userId:{type:t.INTEGER,references:{model:"users",key:"id"}},skillId:{type:t.INTEGER,references:{model:"skills",key:"id"}},completed:{type:t.BOOLEAN,defaultValue:!1},createdAt:{allowNull:!1,type:t.DATE},updatedAt:{allowNull:!1,type:t.DATE}},{underscored:!0})}(d,a.Sequelize.DataTypes),n.Skill.belongsToMany(n.User,{through:"user_skills"}),n.User.belongsToMany(n.Skill,{through:"user_skills"}),n.User.belongsToMany(n.Resource,{through:"user_resources"}),n.Resource.belongsToMany(n.User,{through:"user_resources"}),n.Skill.hasMany(n.UserSkill),n.UserSkill.belongsTo(n.Skill),n.User.belongsToMany(n.Category,{through:"user_categories"}),n.Category.belongsToMany(n.User,{through:"user_categories"}),n.Section.hasMany(n.Category),n.Category.belongsTo(n.Section),n.Category.hasMany(n.Skill),n.Skill.belongsTo(n.Category),n.Skill.hasMany(n.Resource),n.Resource.belongsTo(n.Skill),n.sequelize=d,n.Sequelize=a.Sequelize;const u=n,c=e=>{const t={};for(let l=0;l<e.length;l+=1)t[e[l].skillId]?t[e[l].skillId].push({name:e[l].resourceName,link:e[l].resourceLink}):t[e[l].skillId]=[{name:e[l].resourceName,link:e[l].resourceLink}];return t},y=async(e,t)=>{let l;try{const r=await e.Section.findAll(),s=await e.Category.findAll(),o=await e.Skill.findAll();let a=[],i=[],n={};if(0!=t){a=(await e.UserSkill.findAll({where:{userId:t,completed:!0}})).reduce(((e,t)=>[...e,t.skillId]),[]),i=await e.Category.findAll({include:{model:e.User,where:{id:t}}});const l=await e.User.findByPk(t),r=await l.getResources();n=c(r)}else{const t=await e.Resource.findAll({where:{isDefault:!0}});n=c(t),a=[]}l={sections:r,categories:s,skills:o,resources:n,skillIdsCompleted:a,categoriesCompleted:i}}catch(e){console.log("Error getting dashboard data")}return l},p=require("bcrypt"),g=process.env.FRONTEND_URL||"http://localhost:3000",w=t();w.set("view engine","ejs"),w.use(e()),w.use(t.urlencoded({extended:!1})),w.use(t.json()),w.use(r("_method")),w.use(t.static("public")),w.use(s({credentials:!0,origin:g})),function(e){const t=function(e){return{index:async(t,l)=>{const{id:r}=t.params;let s;s=r?await y(e,r):await y(e,0),l.send(s)}}}(u);e.get("/",((e,t)=>{t.sendFile((0,o.resolve)("dist","main.html"))}));const l=function(e){return{index:async(t,l)=>{const{skillId:r}=t.params,{userId:s,skillCompleted:o}=t.body;try{let t=!1;const a=await e.Skill.findByPk(r),i=await e.User.findByPk(s),n=a.categoryId,d=await e.Category.findByPk(n),u=await e.UserSkill.findOne({where:{userId:s,skillId:r}}),c=await e.Skill.count({where:{categoryId:n}});if(o){u.completed=!1,await u.save();const l=await e.Category.findByPk(n);l&&(await l.removeUser(i),t=!1)}else if(u.completed=!0,await u.save(),c===(await e.Skill.findAll({where:{categoryId:n},include:{model:e.UserSkill,where:{userId:s,completed:!0}}})).length){const l=await e.Category.findByPk(n);await l.addUser(i),t=!0}const y=(await e.UserSkill.findAll({where:{userId:s,completed:!0}})).reduce(((e,t)=>[...e,t.skillId]),[]),p=await e.Category.findAll({include:{model:e.User,where:{id:s}}});l.send({currentCategoryId:n,currentCategory:d,categoryIsComplete:t,updatedSkillIds:y,categoriesCompleted:p})}catch(e){console.error("******* ERROR IN SKILL CONTROLLER *********")}}}}(u),r=function(e){return{signup:async(t,l)=>{const{name:r,email:s,password:o}=t.body;try{const t=await p.hash(o,10),a=await e.User.create({name:r,email:s,password:t}),i=await e.Skill.findAll(),n=[];for(let e=0;e<i.length;e+=1)n.push({userId:a.id,skillId:i[e].id});await e.UserSkill.bulkCreate(n);const d=await e.Resource.findAll({where:{isDefault:!0}});await a.addResources(d),l.cookie("loggedIn",!0),l.cookie("userId",a.id),l.send({newUser:a,status:"OK"})}catch(e){console.log("**** ERROR SIGNING UP ****"),l.sendStatus(401)}},login:async(t,l)=>{const{email:r,password:s}=t.body;try{const t=await e.User.findOne({where:{email:r}});if(t){const e=t.password;await p.compare(s,e)||(console.log("We didn't recognize your password. Please try again!"),l.sendStatus(403)),l.send({userId:t.id,status:"OK",loggedIn:!0})}else console.log("error logging in",error),l.sendStatus(401)}catch(e){console.log("catching error in log in",e),l.sendStatus(401)}},logout:async(e,t)=>{try{t.clearCookie("loggedIn"),t.clearCookie("userId"),t.sendStatus(200)}catch(e){console.log("error logging out",e),t.sendStatus(401)}}}}(u),s=function(e){return{index:async(t,l)=>{const{userId:r}=t.cookies,{title:s,link:o,skillId:a}=t.body;try{const t=await e.Resource.create({resourceName:s,resourceLink:o,skillId:a,isDefault:!1}),i=await e.User.findByPk(r);await t.addUser(i),l.send(t)}catch(e){console.log(e)}}}}(u);e.get("/data/:id",t.index),e.post("/skill/:skillId",l.index),e.post("/signup",r.signup),e.post("/login",r.login),e.post("/logout",r.logout),e.post("/add-resource",s.index)}(w);const k=process.env.PORT||3004;w.listen(k)})()})();